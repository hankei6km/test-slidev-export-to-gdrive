name: input
on:
  workflow_dispatch:
    inputs:
      target:
        type: choice
        options:
          - pages
          - pdf
        required: true
        description: Target type
      file_id:
        type: string
        required: true
        description: id of slide source for concurrency
      slides:
        type: string
        required: true
        description: Slide source

jobs:
  prep:
    permissions:
      contents: "read"

    runs-on: ubuntu-latest

    outputs:
      group_key: ${{ steps.parse.outputs.group_key }}

    steps:
      - name: Parse event
        id: parse
        run: |
          echo -n '::add-mask::' > cmd_mask.txt
          jq < "${GITHUB_EVENT_PATH}" -r .inputs.file_id >> cmd_mask.txt
          cat cmd_mask.txt
          echo -n '::set-output name=group_key::' > cmd_out.txt
          envsubst < <(echo "$SALT") > key.txt
          jq < "${GITHUB_EVENT_PATH}" -r .inputs.file_id >> key.txt
          sha256sum < key.txt >> cmd_out.txt
          cat cmd_out.txt
          rm cmd_out.txt
        env:
          SALT: ${{ secrets.SALT }}

  deploy:
    permissions:
      contents: "write"
      id-token: "write"

    runs-on: ubuntu-latest

    needs: [prep]

    concurrency:
      group: ${{ needs.prep.outputs.group_key }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v3

      - name: Parse event
        id: parse
        run: |
          echo -n '::set-output name=TARGET_TYPE::' > cmd.txt
          jq < "${GITHUB_EVENT_PATH}"  -r .inputs.target >> cmd.txt
          cat cmd.txt
          jq < "${GITHUB_EVENT_PATH}"  -r .inputs.slides > slides.md
          rm cmd.txt

      - name: Use Node.js 16.xx
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-

      - name: Install modules
        run: npm ci

      - name: Build
        if: ${{ steps.parse.outputs.TARGET_TYPE == 'pages' }}
        run: npm run build -- --base /test-slidev-export-to-gdrive/

      - name: Deploy to GitHub Pages
        if: ${{ steps.parse.outputs.TARGET_TYPE == 'pages' }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          publish_branch: gh-pages
          force_orphan: true

      - name: Install fonts and additional modules for exports
        if: ${{ steps.parse.outputs.TARGET_TYPE == 'pdf' }}
        run: |
          sudo apt-get install -y fonts-noto-cjk
          npm install --save-dev playwright-chromium

      - name: Export
        if: ${{ steps.parse.outputs.TARGET_TYPE == 'pdf' }}
        run: npm run export

      - id: "auth"
        if: ${{ steps.parse.outputs.TARGET_TYPE == 'pdf' }}
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v0"
        with:
          # 外部から切り替えできるように secret にしてある.
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      - name: Send slides.pdf to Google drive
        if: ${{ steps.parse.outputs.TARGET_TYPE == 'pdf' }}
        uses: hankei6km/gdrive-act-send@v0
        with:
          # 外部から切り替えできるように secret にしてある.
          parent_id: ${{ secrets.PARENT_ID }}
          dest_file_name: ${{ secrets.DEST_FILE_NAME }}
          src_file_name: ${{ secrets.SRC_FILE_NAME }}
          dest_mime_type: application/pdf
          src_mime_type: application/pdf
